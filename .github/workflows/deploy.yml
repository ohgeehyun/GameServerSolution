name: Build and Deploy GameServer

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }} # 워크플로우당, 브랜치당 하나의 실행 허용
  cancel-in-progress: true # 현재 실행 중인 동일 그룹의 워크플로우를 취소하고 새 워크플로우 시작

on:
  push:
    branches: [ master ]

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ubuntu
  EC2_KEY: ${{ secrets.EC2_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build API Docker image
        run: |
          docker build -f ApiServer/Dockerfile -t game-server-api:latest  .

      - name: Build TCP Docker image
        run: |
          docker build -f TcpServer/Dockerfile -t game-server-tcp:latest  .

      - name: Save images as tarballs
        run: |
          mkdir -p artifacts
          docker save game-server-api:latest -o artifacts/api.tar
          docker save game-server-tcp:latest -o artifacts/tcp.tar
          chmod -R 755 artifacts
          ls -lh artifacts

      - name: Copy images to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: "artifacts"
          target: "~/"

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: "docker-compose.yml"
          target: "~/GameServerSolution"
          overwrite: true

      - name: Load images and restart containers on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            docker load -i ~/artifacts/api.tar
            docker load -i ~/artifacts/tcp.tar
            cd ~/GameServerSolution
            docker compose down
            docker compose up -d --force-recreate
            docker ps -a
            docker compose logs --tail=100