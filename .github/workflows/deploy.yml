name: Build and Deploy GameServer

on:
  push:
    branches: [ master ]

env:
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USER: ubuntu
  EC2_KEY: ${{ secrets.EC2_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Build API Docker image
        run: |
          docker build -f ApiServer/Dockerfile -t game-server-api:latest ApiServer .

      - name: Build TCP Docker image
        run: |
          docker build -f TcpServer/Dockerfile -t game-server-tcp:latest TcpServer .

      - name: Save images as tarballs
        run: |
          docker save game-server-api:latest -o api.tar
          docker save game-server-tcp:latest -o tcp.tar

      - name: Copy images to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          source: "api.tar,tcp.tar"
          target: "~/"

      - name: Load images and restart containers on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_USER }}
          key: ${{ env.EC2_KEY }}
          script: |
            docker load -i ~/api.tar
            docker load -i ~/tcp.tar
            cd ~/GameServerSolution
            docker compose down
            docker compose up -d