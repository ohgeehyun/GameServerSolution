services:
  api:
    build:
      context: .
      dockerfile: ApiServer/Dockerfile
    image: game-server-api:latest
    container_name: api-server
    env_file:
      - .env
    ports:
      - "50000:5251"
    networks:
      - gameserver-net
    environment:
    - JWT_SECRET_KEY
    - MYSQL_CONNECTION_STRING
    - REDIS_CONNECTION_STRING
    ulimits:
      nofile:
        soft: 2048
        hard: 4096
    restart : always
    
  tcp:
    build:
      context: .
      dockerfile: TcpServer/Dockerfile
    image: game-server-tcp:latest  
    container_name: tcp-server
    env_file:
      - .env
    ports:
      - "50001:7777"
    networks:
      - gameserver-net
    environment:
      - JWT_SECRET_KEY
      - MYSQL_CONNECTION_STRING
      - REDIS_CONNECTION_STRING
    depends_on:
      - api
    ulimits:
      nofile:
        soft: 2048
        hard: 4096
    restart : always

  roomserver:
    build:
      context: .
      dockerfile: RoomServer/Dockerfile
    image: game-server-room:latest
    container_name: room-server
    ports:
      - "50002:7778"  # 개발 테스트용 포트
    networks:
      - gameserver-net
    env_file:
      - .env
    environment:
      - JWT_SECRET_KEY
      - MYSQL_CONNECTION_STRING
      - REDIS_CONNECTION_STRING
    depends_on:
      - api
    ulimits:
      nofile:
        soft: 2048
        hard: 4096
    restart: on-failure
    
networks:
  gameserver-net:
    driver: bridge